
/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == "string",
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  }
}

/// Scale effect to specific element
/// @access public
/// @param {float} $scale - scale value
/// @option $scale
@mixin overscale($scale: 1.2) {
  cursor: pointer;
  transform: scale($scale);
}

/// Remove specific element
/// @access public
/// @param no param
@mixin remove() {
  display: none;
}

/// Draw clip area solid
/// @access public
/// @param {integer} $side 0: left, 1: right
@mixin clipdraw(
  $side,
  $degree: 70deg,
  $background-width: 100%,
  $background-height: 100%
) {
  @if $side == $leftside {
    background-color: transparent;
    background-image: -webkit-linear-gradient(
      15deg,
      white 0%,
      white $gradoffset,
      rgba(255, 255, 255, 0) $gradoffset,
      rgba(255, 255, 255, 0) 100%
    );
    background-image: -o-linear-gradient(
      15deg,
      white 0%,
      white $gradoffset,
      rgba(255, 255, 255, 0) $gradoffset,
      rgba(255, 255, 255, 0) 100%
    );
    background-image: linear-gradient(
      70deg,
      white 0%,
      white $gradoffset,
      rgba(255, 255, 255, 0) $gradoffset,
      rgba(255, 255, 255, 0) 100%
    );
    background-position: bottom right;
    background-repeat: no-repeat;
    background-size: 2000px 2000px;
    @include respond-to("handle") {
      background: white;
    }
  } @else {
    background-color: transparent;
    background-image: -webkit-linear-gradient(
      15deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) $gradoffsetop,
      black $gradoffsetop,
      black 100%
    );
    background-image: -o-linear-gradient(
      15deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) $gradoffsetop,
      black $gradoffsetop,
      black 100%
    );
    background-image: linear-gradient(
      70deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) $gradoffsetop,
      black $gradoffsetop,
      black 100%
    );
    background-position: top left;
    background-repeat: no-repeat;
    background-size: 2000px 2000px;
    @include respond-to("handle") {
      background: black;
    }
  }

  @include respond-to("handle") {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 5%;
  }
}

/// Specific button css properties
/// @access public
/// @param no param
@mixin button() {
  background-color: $orange;
  border: none;
  color: $white;
  font-family: Helvetica;
  font-size: 1rem;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0.1rem;
  border-radius: 0.3rem;
  box-shadow: 0px 7px 15px rgba(0, 0, 0, 0.2);
  padding: 1%;
  line-height: 1;
  transition: all 750ms cubic-bezier(0.19, 1, 0.22, 1);
  &:hover {
    @include overscale(1.05);
  }
}

/// reset basic styles...
html {
  font-family: "Open Sans", sans-serif;
  font-weight: 100;
  font-size: 16px;
  background-color: $white;
  color: $gray-dark;
}

body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

html,
body {
  height: 100%;
  min-height: 100%;
}

figure {
  margin: 0;
  padding: 0;
}

button {
  @include button();
}

a {
  color: $link-color;
  font-size: inherit;
  text-decoration: none;

  &:link,
  &:hover,
  &:active,
  &:visited {
    color: inherit;
    font-size: inherit;
  }
}

img {
  max-width: 100%;
}

#root {
  min-height: 100%;
  margin: 0 auto;
}
